class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if (s1 == null || s1.length() == 0 || s1.length () > s2.length()) {
            return false;
        }
        int length = s1.length();
        int [] arr = new int [26];
        for (char c : s1.toCharArray()) {
            arr[c - 'a']++;
        }
        int slow = 0;
        int fast = 0;
        while (slow < s2.length() - length + 1) {
            char c = s2.charAt(slow);
            if (arr[c - 'a'] > 0) {
                fast = slow + 1;
                int [] arr2 = new int [26];
                arr2[c - 'a']++;
                while (fast < slow + length) {
                    char d = s2.charAt(fast);
                    if (arr[d - 'a'] == 0) {
                        break;
                    }
                    else {
                        arr2[d - 'a']++;
                    }
                    fast++;
                }
                if (Arrays.equals(arr, arr2)) {
                    return true;
                }
            }
            slow++;
        }
        return false;
    }
} // beats 12.97% of java submissions;

class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if (s1 == null || s1.length() == 0 || s1.length () > s2.length()) {
            return false;
        }
        int length = s1.length();
        int [] arr = new int [26];
        for (char c : s1.toCharArray()) {
            arr[c - 'a']++;
        }
        int slow = 0;
        int fast = 0;
        while (slow < s2.length() - length + 1) {
            char c = s2.charAt(slow);
            if (arr[c - 'a'] > 0) {
                fast = slow + 1;
                int [] arr2 = new int [26];
                arr2[c - 'a']++;
                while (fast < slow + length) {
                    char d = s2.charAt(fast);
                    if (arr[d - 'a'] == 0) {
                        break;
                    }
                    else {
                        arr2[d - 'a']++;
                    }
                    fast++;
                }
                if (Arrays.equals(arr, arr2)) {
                    return true;
                }
            }
            slow++;
        }
        return false;
    }
} // beats 19.01% of java submissions;





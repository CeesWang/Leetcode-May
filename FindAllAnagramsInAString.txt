class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        if (s.length() == 0 || p.length() > s.length()) {
            return new ArrayList<>();        
        }
        int [] arr = new int [26];
        int [] anagramArr = new int [26];
        int length = p.length();
        List<Integer> ans = new ArrayList<>();
        for (int i = 0; i < p.length(); ++i) {
            arr[p.charAt(i) - 'a']++;
            anagramArr[s.charAt(i) - 'a']++;
        }
        
        if (Arrays.equals(arr, anagramArr)) {
            ans.add(0);
        }
        for (int i = length; i < s.length(); ++i) {            
            char c = s.charAt(i);
            char prev = s.charAt(i - length);
            anagramArr[c-'a']++;
            if (anagramArr[c - 'a'] > 0) {
                anagramArr[prev - 'a']--;                
            }

            if (arr[c- 'a'] > 0 && Arrays.equals(arr, anagramArr)) {  // checks if the letter is in p
                ans.add(i - length + 1);
            }
        }
        return ans;
    }
} // beats 50.55% of java submissions
